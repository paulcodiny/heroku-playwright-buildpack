#!/usr/bin/env bash

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

error() {
    echo " !     $*" >&2
    exit 1
}

topic() {
    echo "-----> $*"
}

install_system_deps() {
    topic "Installing System Dependencies"

    APT_BUILDPACK="https://github.com/heroku/heroku-buildpack-apt"
    local buildpack_tmpdir=$(mktemp -d)
    cd $buildpack_tmpdir && git clone $APT_BUILDPACK .

    local build_tmpdir=$(mktemp -d)
    mkdir -p $build_tmpdir

    SUPPORTED_BROWSERS=${PLAYWRIGHT_BUILDPACK_BROWSERS:-chromium}
    echo "Installing minimal Playwright dependencies (env: PLAYWRIGHT_BUILDPACK_BROWSERS) for $SUPPORTED_BROWSERS."

    if [[ "$SUPPORTED_BROWSERS" == *"chromium"* ]]; then
        cat << EOF >>$build_tmpdir/Aptfile
# Minimal Chromium dependencies
libatk1.0-0
libnspr4
libnss3
libxss1
fonts-noto-color-emoji
libgbm1
libatk-bridge2.0-0
libxkbcommon0
libxrandr2
libatspi2.0-0
libxshmfence-dev
libxcomposite1
libxdamage1
libxfixes3
libasound2
EOF
    fi

    local cache_tmpdir=$(mktemp -d)

    HOME=/app $buildpack_tmpdir/bin/compile $build_tmpdir $cache_tmpdir
    if [ $? -ne 0 ]; then
        rm -rf $buildpack_tmpdir $build_tmpdir $cache_tmpdir
        error "Could not install dependencies"
    fi
    mv $build_tmpdir/.apt $BUILD_DIR
    # mv file in case user is using .profile.d
    mkdir -p $BUILD_DIR/.profile.d/
    mv $build_tmpdir/.profile.d/000_apt.sh $BUILD_DIR/.profile.d/

    rm -rf $buildpack_tmpdir $build_tmpdir $cache_tmpdir
}

configure_export_env() {
    topic "Writing profile script"
    mkdir -p $BUILD_DIR/.profile.d
    cat << EOF >$BUILD_DIR/.profile.d/001_playwright.sh
export PLAYWRIGHT_BROWSERS_PATH=0
# They are not referenced correctly for ffmpeg
export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/app/.apt/usr/lib/x86_64-linux-gnu/pulseaudio/:/app/.apt/lib/x86_64-linux-gnu/
EOF

    # Instead of using /export, write to a safe location like $BUILD_DIR/.profile.d
    echo "export PLAYWRIGHT_BROWSERS_PATH=0" >> "$BUILD_DIR/.profile.d/export"
    export PLAYWRIGHT_BROWSERS_PATH=0
}

export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir "$ENV_DIR" PLAYWRIGHT_BUILDPACK_BROWSERS
install_system_deps
configure_export_env
